{"version":3,"sources":["Search-app/Search-app.js","ClientsList-app/ClientsList-app.js","ClientInfo-app/ClientInfo-app.js","reducer/redux.js","index.js"],"names":["Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","props","onClickBTN","searchInput","value","testStore","_this2","react_default","a","createElement","id","type","ref","input","onClick","giveStore","bind","className","Component","connect","state","dispatch","text","store","map","ThisClient","general","firstName","includes","lastName","show","payload","ClientsList","clients","client","Grid","Row","key","address","zipCode","onActiveClient","src","avatar","alt","job","title","reversed","ClientsInfo","personInfo","concat","company","street","city","country","contact","email","phone","initialState","Static","createStore","arguments","length","undefined","action","toConsumableArray","render","es","Search_app","ClientsList_app","ClientInfo_app","document","getElementById"],"mappings":"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","file":"static/js/main.842fd6ae.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './Search_Style.css';\r\n\r\n\r\nclass Search extends Component {\r\n    constructor() {\r\n        super();\r\n        this.name = 'Search'\r\n    }\r\n\r\n    giveStore() {\r\n        // console.log('findStore', this.searchInput.value);\r\n        this.props.onClickBTN(this.searchInput.value, this.props.testStore)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id={'Search'}>\r\n                <div id={'search_div'}>\r\n                    <input id={'search_input'} type=\"text\" ref={(input) => {\r\n                        this.searchInput = input\r\n                    }}/>\r\n                    <button id={'search_btn'} onClick={this.giveStore.bind(this)}><i className=\"fas fa-search big\"/></button>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        testStore: state[0],\r\n    }),\r\n    dispatch => ({\r\n        onClickBTN: (text, store) => {\r\n            store.map(ThisClient => (!ThisClient.general.firstName.includes(text) && !ThisClient.general.lastName.includes(text)) ? ThisClient.general.show = false : ThisClient.general.show = true);\r\n            dispatch({type: 'AddList', payload: [store]})\r\n        }\r\n    })\r\n)(Search)\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './ClientsList_Style.css';\r\nimport {Grid} from 'semantic-ui-react'\r\nimport {connect} from 'react-redux'\r\n\r\nclass ClientsList extends Component {\r\n    render() {\r\n        // console.log( 'This',this.props.testStore[0]);\r\n        this.clients = this.props.testStore[0].map((client) => {\r\n            if (client.general.show) {\r\n                return (\r\n                    <Grid.Row key={client.address.zipCode}>\r\n                        <div className={'clients_container'} onClick={() => this.props.onActiveClient(client)}>\r\n                            <div className={'Small_avatar'}>\r\n                                <img src={client.general.avatar} alt=\"avatar\"/></div>\r\n                            <div className={'Personal_info'}>\r\n                                <span\r\n                                    className={'client_name'}>{client.general.firstName} {client.general.lastName}</span>\r\n                                <span className={'job_title'}>{client.job.title}</span>\r\n                            </div>\r\n                        </div>\r\n                    </Grid.Row>\r\n                )\r\n            }\r\n            else {\r\n                // console.log('asdasdsadasdasfasfdsgg');\r\n                return false\r\n            }\r\n        });\r\n        return (\r\n            <section id={'Clients_List'}>\r\n                <Grid reversed='computer vertically'>\r\n                    {this.clients}\r\n                </Grid>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        testStore: state\r\n    }),\r\n    dispatch => ({\r\n        onActiveClient: (client) => {\r\n            // console.log(client);\r\n            dispatch({type: 'AddActive', payload: client});\r\n        }\r\n    })\r\n)(ClientsList)\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './ClientInfo_Style.css'\r\n\r\nclass ClientsInfo extends Component {\r\n    render() {\r\n         // console.log('ThisStore',this.props.testStore);\r\n        this.personInfo = {\r\n            avatar: `${this.props.testStore.general.avatar}`,\r\n            name: `${this.props.testStore.general.firstName} ${this.props.testStore.general.lastName}`,\r\n            job: `${this.props.testStore.job.title} ( ${this.props.testStore.job.company} )`,\r\n            address: {\r\n                street: `${this.props.testStore.address.street}`,\r\n                city: `${this.props.testStore.address.city}`,\r\n                zipCode: `${this.props.testStore.address.zipCode}`,\r\n                country: `${this.props.testStore.address.country}`\r\n            },\r\n            contact: {\r\n                email: `${this.props.testStore.contact.email}`,\r\n                phone: `${this.props.testStore.contact.phone}`\r\n            }\r\n        };\r\n        return (\r\n            <section id={'Clients_Info'}>\r\n                 <div id={'Client_avatar_img'}>\r\n                     <img src={this.personInfo.avatar} alt=\"Avatar\"/>\r\n                 </div>\r\n                 <div id={'Client_text'}>\r\n                     <div id={'personalInfo'}>\r\n                         <h1>{this.personInfo.name}</h1>\r\n                         <div className={'info_container'}><b>Job :</b>\r\n                             <div className={'Info_list'}>\r\n                                 <span className={'infoItem'}>{this.personInfo.job}</span>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                     <div id={'otherInfo'}>\r\n                         <div className={'info_container'}><b>Address :</b>\r\n                             <div className={'Info_list list_df'}>\r\n                                 <span className={'infoItem'}>1) Street: {this.personInfo.address.street}</span>\r\n                                 <span className={'infoItem'}>2) City: {this.personInfo.address.city}</span>\r\n                                 <span className={'infoItem'}>3) Zip code: {this.personInfo.address.zipCode}</span>\r\n                                 <span className={'infoItem'}>4) Country: {this.personInfo.address.country}</span>\r\n                             </div>\r\n                             <div className={'info_container'}><b>Contacts :</b>\r\n                                <div className={'Info_list list_df'}>\r\n                                    <span className={'infoItem'}>1) Email: {this.personInfo.contact.email}</span>\r\n                                    <span className={'infoItem'}>2) Phone: {this.personInfo.contact.phone}</span>\r\n                                </div>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </section>\r\n        )\r\n    }\r\n}\r\nexport default connect(\r\n    state => ({\r\n        testStore: state[1]\r\n    })\r\n)(ClientsInfo)","import Clients from '../clients';\r\n\r\nconst initialState = Clients;\r\n// let Static = Clients[0];    // В поле информации будет первый человек списка(Но я оставил поле пустым)\r\nlet Static = {\r\n    \"general\": {\r\n        \"firstName\": \"\",\r\n        \"lastName\": \"\",\r\n        \"avatar\": \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTc41Jg0v9kpaxH_0BoMVnjqgTKU7_PrtQyol0nlznXkflTM6lw\",\r\n        \"show\": true\r\n    },\r\n    \"job\": {\r\n        \"company\": \"\",\r\n        \"title\": \"\"\r\n    },\r\n    \"contact\": {\r\n        \"email\": \"\",\r\n        \"phone\": \"\"\r\n    },\r\n    \"address\": {\r\n        \"street\": \"\",\r\n        \"city\": \"\",\r\n        \"zipCode\": \"\",\r\n        \"country\": \"\"\r\n    }\r\n};\r\n\r\nexport default function findStore(state = [initialState, Static], action) {\r\n    if (action.type === 'AddList') {\r\n        // console.log('TtT', action.payload);\r\n        return state = [...action.payload, Static];\r\n    }\r\n    if (action.type === 'AddActive') {\r\n        // console.log('this', [action.payload]);\r\n        return state = [initialState, action.payload];\r\n\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux'\n\n\nimport './Style.css'\n\nimport Search from './Search-app/Search-app'\nimport ClientsList from './ClientsList-app/ClientsList-app';\nimport ClientInfo from './ClientInfo-app/ClientInfo-app';\nimport findStore from './reducer/redux'\n\n\nconst store = createStore(findStore);\n\n\nlet GetHTML = () => {\n    return (\n        <Provider store={store}>\n            <section id={'Container'}>\n\n                <section id=\"left_main\">\n                    <Search/>\n                    <ClientsList/>\n                </section>\n                <section id={'right_main'}>\n                    <ClientInfo/>\n                </section>\n            </section>\n        </Provider>\n    )\n};\n\n\nrender(<GetHTML/>, document.getElementById('root'));\n\n"],"sourceRoot":""}